{"ast":null,"code":"var _jsxFileName = \"/Users/leeduhui/work/golf_reservation/golf_reservation_app/src/components/ReserveForm.js\",\n  _s = $RefreshSig$();\n// src/components/ReserveForm.js\nimport React, { useState, useEffect } from \"react\";\nimport { rooms, slots } from \"../utils/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReserveForm({\n  reservations,\n  onReserve\n}) {\n  _s();\n  const [room, setRoom] = useState(rooms[0]);\n  const [start, setStart] = useState(slots[0]);\n  const [end, setEnd] = useState(slots[1]);\n  const [user, setUser] = useState(\"\");\n\n  // start를 바꾸면 end가 항상 그 다음 슬롯으로 초기화되도록\n  useEffect(() => {\n    const idx = slots.indexOf(start);\n    if (idx >= 0 && idx < slots.length - 1) {\n      setEnd(slots[idx + 1]);\n    }\n  }, [start]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const startIdx = slots.indexOf(start);\n    const endIdx = slots.indexOf(end);\n    // 끝시간이 시작시간보다 반드시 뒤여야 함\n    if (endIdx <= startIdx) {\n      alert(\"종료 시간은 시작 시간 이후여야 합니다.\");\n      return;\n    }\n    // 겹치는 예약 체크 (같은 방에서 시간 구간이 겹치는지)\n    const overlap = reservations.some(r => r.room === room && slots.indexOf(r.start) < endIdx && slots.indexOf(r.end) > startIdx);\n    if (overlap) {\n      alert(\"해당 시간 구간에 이미 예약이 있습니다.\");\n      return;\n    }\n    onReserve({\n      id: `${room}-${start}-${end}`,\n      room,\n      start,\n      end,\n      user\n    });\n    setUser(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: \"16px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"\\uBC29 \\uC120\\uD0DD:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: room,\n        onChange: e => setRoom(e.target.value),\n        children: rooms.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r,\n          children: r\n        }, r, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginLeft: \"8px\"\n      },\n      children: [\"\\uC2DC\\uC791 \\uC2DC\\uAC04:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: start,\n        onChange: e => setStart(e.target.value),\n        children: slots.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s,\n          children: s\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginLeft: \"8px\"\n      },\n      children: [\"\\uC885\\uB8CC \\uC2DC\\uAC04:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: end,\n        onChange: e => setEnd(e.target.value),\n        children: slots.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: s,\n          disabled: slots.indexOf(s) <= slots.indexOf(start),\n          children: s\n        }, s, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginLeft: \"8px\"\n      },\n      children: [\"\\uC774\\uB984:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC774\\uB984 \\uC785\\uB825\",\n        value: user,\n        onChange: e => setUser(e.target.value),\n        required: true,\n        style: {\n          marginLeft: \"4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        marginLeft: \"8px\"\n      },\n      children: \"\\uC608\\uC57D\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ReserveForm, \"23iNNJ+zxHe54zz/1yEYe5xCx0o=\");\n_c = ReserveForm;\nvar _c;\n$RefreshReg$(_c, \"ReserveForm\");","map":{"version":3,"names":["React","useState","useEffect","rooms","slots","jsxDEV","_jsxDEV","ReserveForm","reservations","onReserve","_s","room","setRoom","start","setStart","end","setEnd","user","setUser","idx","indexOf","length","handleSubmit","e","preventDefault","startIdx","endIdx","alert","overlap","some","r","id","onSubmit","style","marginTop","children","value","onChange","target","map","fileName","_jsxFileName","lineNumber","columnNumber","marginLeft","s","disabled","type","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/leeduhui/work/golf_reservation/golf_reservation_app/src/components/ReserveForm.js"],"sourcesContent":["// src/components/ReserveForm.js\nimport React, { useState, useEffect } from \"react\";\nimport { rooms, slots } from \"../utils/data\";\n\nexport default function ReserveForm({ reservations, onReserve }) {\n  const [room, setRoom] = useState(rooms[0]);\n  const [start, setStart] = useState(slots[0]);\n  const [end, setEnd] = useState(slots[1]);\n  const [user, setUser] = useState(\"\");\n\n  // start를 바꾸면 end가 항상 그 다음 슬롯으로 초기화되도록\n  useEffect(() => {\n    const idx = slots.indexOf(start);\n    if (idx >= 0 && idx < slots.length - 1) {\n      setEnd(slots[idx + 1]);\n    }\n  }, [start]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const startIdx = slots.indexOf(start);\n    const endIdx = slots.indexOf(end);\n    // 끝시간이 시작시간보다 반드시 뒤여야 함\n    if (endIdx <= startIdx) {\n      alert(\"종료 시간은 시작 시간 이후여야 합니다.\");\n      return;\n    }\n    // 겹치는 예약 체크 (같은 방에서 시간 구간이 겹치는지)\n    const overlap = reservations.some(r =>\n      r.room === room &&\n      slots.indexOf(r.start) < endIdx &&\n      slots.indexOf(r.end) > startIdx\n    );\n    if (overlap) {\n      alert(\"해당 시간 구간에 이미 예약이 있습니다.\");\n      return;\n    }\n    onReserve({\n      id: `${room}-${start}-${end}`,\n      room,\n      start,\n      end,\n      user\n    });\n    setUser(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ marginTop: \"16px\" }}>\n      <label>\n        방 선택:\n        <select value={room} onChange={e => setRoom(e.target.value)}>\n          {rooms.map(r => (\n            <option key={r} value={r}>{r}</option>\n          ))}\n        </select>\n      </label>\n      <label style={{ marginLeft: \"8px\" }}>\n        시작 시간:\n        <select value={start} onChange={e => setStart(e.target.value)}>\n          {slots.map(s => (\n            <option key={s} value={s}>{s}</option>\n          ))}\n        </select>\n      </label>\n      <label style={{ marginLeft: \"8px\" }}>\n        종료 시간:\n        <select value={end} onChange={e => setEnd(e.target.value)}>\n          {slots.map(s => (\n            <option\n              key={s}\n              value={s}\n              disabled={slots.indexOf(s) <= slots.indexOf(start)}\n            >\n              {s}\n            </option>\n          ))}\n        </select>\n      </label>\n      <label style={{ marginLeft: \"8px\" }}>\n        이름:\n        <input\n          type=\"text\"\n          placeholder=\"이름 입력\"\n          value={user}\n          onChange={e => setUser(e.target.value)}\n          required\n          style={{ marginLeft: \"4px\" }}\n        />\n      </label>\n      <button type=\"submit\" style={{ marginLeft: \"8px\" }}>예약하기</button>\n    </form>\n  );\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}