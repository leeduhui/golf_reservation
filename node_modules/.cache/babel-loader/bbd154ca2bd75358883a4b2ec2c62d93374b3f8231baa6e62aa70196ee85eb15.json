{"ast":null,"code":"/* src/App.js */import React,{useState,useEffect}from\"react\";import{supabase}from\"./utils/supabaseClient\";import TimeTable from\"./components/TimeTable\";import ReserveForm from\"./components/ReserveForm\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[reservations,setReservations]=useState([]);const[now,setNow]=useState(new Date());// 1) 초기 데이터 로드\nuseEffect(()=>{supabase.from(\"reservations\").select(\"*\").order(\"inserted_at\",{ascending:true}).then(_ref=>{let{data}=_ref;return setReservations(data||[]);});},[]);// 2) 실시간 리스너 (Supabase v2)\nuseEffect(()=>{const channel=supabase.channel(\"public:reservations\").on(\"postgres_changes\",{event:\"*\",schema:\"public\",table:\"reservations\"},()=>{supabase.from(\"reservations\").select(\"*\").order(\"inserted_at\",{ascending:true}).then(_ref2=>{let{data}=_ref2;return setReservations(data||[]);});}).subscribe();return()=>{supabase.removeChannel(channel);};},[]);// 3) 현재 시간 초단위 업데이트\nuseEffect(()=>{const timer=setInterval(()=>setNow(new Date()),1000);return()=>clearInterval(timer);},[]);// 4) 예약 추가\nconst handleReserve=async newRes=>{await supabase.from(\"reservations\").insert(newRes);};// 5) 예약 취소\nconst handleCancel=async id=>{await supabase.from(\"reservations\").delete().eq(\"id\",id);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"header\",{style:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uC2A4\\uD06C\\uB9B0\\uACE8\\uD504 \\uC608\\uC57D\"}),/*#__PURE__*/_jsx(\"div\",{className:\"now\",style:{fontSize:\"1rem\"},children:now.toLocaleTimeString(\"ko-KR\")})]}),/*#__PURE__*/_jsx(TimeTable,{reservations:reservations,onCancel:handleCancel,currentTime:now}),/*#__PURE__*/_jsx(ReserveForm,{reservations:reservations,onReserve:handleReserve,currentTime:now})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","supabase","TimeTable","ReserveForm","jsx","_jsx","jsxs","_jsxs","App","reservations","setReservations","now","setNow","Date","from","select","order","ascending","then","_ref","data","channel","on","event","schema","table","_ref2","subscribe","removeChannel","timer","setInterval","clearInterval","handleReserve","newRes","insert","handleCancel","id","delete","eq","className","children","style","display","justifyContent","alignItems","fontSize","toLocaleTimeString","onCancel","currentTime","onReserve"],"sources":["/Users/leeduhui/work/golf_reservation/golf_reservation_app/src/App.js"],"sourcesContent":["/* src/App.js */\nimport React, { useState, useEffect } from \"react\";\nimport { supabase } from \"./utils/supabaseClient\";\nimport TimeTable from \"./components/TimeTable\";\nimport ReserveForm from \"./components/ReserveForm\";\nimport \"./App.css\";\n\nfunction App() {\n  const [reservations, setReservations] = useState([]);\n  const [now, setNow] = useState(new Date());\n\n  // 1) 초기 데이터 로드\n  useEffect(() => {\n    supabase\n      .from(\"reservations\")\n      .select(\"*\")\n      .order(\"inserted_at\", { ascending: true })\n      .then(({ data }) => setReservations(data || []));\n  }, []);\n\n  // 2) 실시간 리스너 (Supabase v2)\n  useEffect(() => {\n    const channel = supabase\n      .channel(\"public:reservations\")\n      .on(\n        \"postgres_changes\",\n        { event: \"*\", schema: \"public\", table: \"reservations\" },\n        () => {\n          supabase\n            .from(\"reservations\")\n            .select(\"*\")\n            .order(\"inserted_at\", { ascending: true })\n            .then(({ data }) => setReservations(data || []));\n        }\n      )\n      .subscribe();\n\n    return () => {\n      supabase.removeChannel(channel);\n    };\n  }, []);\n\n  // 3) 현재 시간 초단위 업데이트\n  useEffect(() => {\n    const timer = setInterval(() => setNow(new Date()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // 4) 예약 추가\n  const handleReserve = async (newRes) => {\n    await supabase.from(\"reservations\").insert(newRes);\n  };\n\n  // 5) 예약 취소\n  const handleCancel = async (id) => {\n    await supabase.from(\"reservations\").delete().eq(\"id\", id);\n  };\n\n  return (\n    <div className=\"container\">\n      <header style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <h1>스크린골프 예약</h1>\n        <div className=\"now\" style={{ fontSize: \"1rem\" }}>{now.toLocaleTimeString(\"ko-KR\")}</div>\n      </header>\n      <TimeTable\n        reservations={reservations}\n        onCancel={handleCancel}\n        currentTime={now}\n      />\n      <ReserveForm\n        reservations={reservations}\n        onReserve={handleReserve}\n        currentTime={now}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}