{"ast":null,"code":"/* src/components/ReserveForm.js */import React,{useState,useEffect}from\"react\";import{rooms,slots}from\"../utils/data\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ReserveForm(_ref){let{reservations,onReserve,currentTime}=_ref;const[room,setRoom]=useState(rooms[0]);const[start,setStart]=useState(slots[0]);const[end,setEnd]=useState(slots[1]);const[user,setUser]=useState(\"\");// start 변경 시 end 자동 설정\nuseEffect(()=>{const idx=slots.indexOf(start);if(idx<slots.length-1)setEnd(slots[idx+1]);},[start]);// 현재 시각(분)\nconst nowMinutes=currentTime.getHours()*60+currentTime.getMinutes();console.log(\"[DEBUG] nowMinutes:\",nowMinutes);const windowStart=5*60;// 05:00\nconst windowEnd=12*60;// 12:00\n// boundaryMinutes 결정\nlet boundaryMinutes;if(nowMinutes<windowStart){boundaryMinutes=windowStart;}else if(nowMinutes>=windowEnd){boundaryMinutes=Infinity;}else{boundaryMinutes=Math.ceil(nowMinutes/30)*30;}console.log(\"[DEBUG] boundaryMinutes:\",boundaryMinutes);const handleSubmit=e=>{e.preventDefault();console.log(\"[DEBUG] handleSubmit\",{room,start,end,user});const sIdx=slots.indexOf(start);const eIdx=slots.indexOf(end);if(eIdx<=sIdx){alert(\"종료 시간은 시작 이후여야 합니다.\");return;}const overlap=reservations.some(r=>r.room===room&&slots.indexOf(r.start)<eIdx&&slots.indexOf(r.end)>sIdx);if(overlap){alert(\"이미 예약이 있습니다.\");return;}onReserve({id:\"\".concat(room,\"-\").concat(start,\"-\").concat(end),room,start,end,user});console.log(\"[DEBUG] Reserved:\",{room,start,end,user});setUser(\"\");};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:{display:\"flex\",flexWrap:\"wrap\",gap:\"8px\",marginTop:\"16px\"},children:[/*#__PURE__*/_jsx(\"select\",{value:room,onChange:e=>setRoom(e.target.value),children:rooms.map(r=>/*#__PURE__*/_jsx(\"option\",{value:r,children:r},r))}),/*#__PURE__*/_jsx(\"select\",{value:start,onChange:e=>setStart(e.target.value),children:slots.map(s=>{const[h,m]=s.split(\":\").map(Number);const slotMinutes=h*60+m;const disabled=slotMinutes<boundaryMinutes;console.log(\"[DEBUG] start slot \".concat(s,\": slotMinutes=\").concat(slotMinutes,\", disabled=\").concat(disabled));return/*#__PURE__*/_jsx(\"option\",{value:s,disabled:disabled,children:s},s);})}),/*#__PURE__*/_jsx(\"select\",{value:end,onChange:e=>setEnd(e.target.value),children:slots.map(s=>{const[h,m]=s.split(\":\").map(Number);const slotMinutes=h*60+m;const startMinutes=parseInt(start.split(\":\")[0],10)*60+parseInt(start.split(\":\")[1],10);const disabled=slotMinutes<boundaryMinutes||slotMinutes<=startMinutes;console.log(\"[DEBUG] end slot \".concat(s,\": slotMinutes=\").concat(slotMinutes,\", startMinutes=\").concat(startMinutes,\", disabled=\").concat(disabled));return/*#__PURE__*/_jsx(\"option\",{value:s,disabled:disabled,children:s},s);})}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC774\\uB984\",value:user,onChange:e=>setUser(e.target.value),required:true}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uC608\\uC57D\\uD558\\uAE30\"})]});}","map":{"version":3,"names":["React","useState","useEffect","rooms","slots","jsx","_jsx","jsxs","_jsxs","ReserveForm","_ref","reservations","onReserve","currentTime","room","setRoom","start","setStart","end","setEnd","user","setUser","idx","indexOf","length","nowMinutes","getHours","getMinutes","console","log","windowStart","windowEnd","boundaryMinutes","Infinity","Math","ceil","handleSubmit","e","preventDefault","sIdx","eIdx","alert","overlap","some","r","id","concat","onSubmit","style","display","flexWrap","gap","marginTop","children","value","onChange","target","map","s","h","m","split","Number","slotMinutes","disabled","startMinutes","parseInt","type","placeholder","required"],"sources":["/Users/leeduhui/work/golf_reservation/golf_reservation_app/src/components/ReserveForm.js"],"sourcesContent":["/* src/components/ReserveForm.js */\nimport React, { useState, useEffect } from \"react\";\nimport { rooms, slots } from \"../utils/data\";\n\nexport default function ReserveForm({ reservations, onReserve, currentTime }) {\n  const [room, setRoom] = useState(rooms[0]);\n  const [start, setStart] = useState(slots[0]);\n  const [end, setEnd] = useState(slots[1]);\n  const [user, setUser] = useState(\"\");\n\n  // start 변경 시 end 자동 설정\n  useEffect(() => {\n    const idx = slots.indexOf(start);\n    if (idx < slots.length - 1) setEnd(slots[idx + 1]);\n  }, [start]);\n\n  // 현재 시각(분)\n  const nowMinutes = currentTime.getHours() * 60 + currentTime.getMinutes();\n  console.log(\"[DEBUG] nowMinutes:\", nowMinutes);\n  const windowStart = 5 * 60;   // 05:00\n  const windowEnd = 12 * 60;    // 12:00\n\n  // boundaryMinutes 결정\n  let boundaryMinutes;\n  if (nowMinutes < windowStart) {\n    boundaryMinutes = windowStart;\n  } else if (nowMinutes >= windowEnd) {\n    boundaryMinutes = Infinity;\n  } else {\n    boundaryMinutes = Math.ceil(nowMinutes / 30) * 30;\n  }\n  console.log(\"[DEBUG] boundaryMinutes:\", boundaryMinutes);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"[DEBUG] handleSubmit\", { room, start, end, user });\n    const sIdx = slots.indexOf(start);\n    const eIdx = slots.indexOf(end);\n    if (eIdx <= sIdx) {\n      alert(\"종료 시간은 시작 이후여야 합니다.\");\n      return;\n    }\n    const overlap = reservations.some(r =>\n      r.room === room &&\n      slots.indexOf(r.start) < eIdx &&\n      slots.indexOf(r.end) > sIdx\n    );\n    if (overlap) {\n      alert(\"이미 예약이 있습니다.\");\n      return;\n    }\n    onReserve({ id: `${room}-${start}-${end}`, room, start, end, user });\n    console.log(\"[DEBUG] Reserved:\", { room, start, end, user });\n    setUser(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit} style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"8px\", marginTop: \"16px\" }}>\n      {/* 방 선택 */}\n      <select value={room} onChange={e => setRoom(e.target.value)}>\n        {rooms.map(r => <option key={r} value={r}>{r}</option>)}\n      </select>\n\n      {/* 시작시간: boundary 이전 비활성화 */}\n      <select value={start} onChange={e => setStart(e.target.value)}>\n        {slots.map(s => {\n          const [h, m] = s.split(\":\").map(Number);\n          const slotMinutes = h * 60 + m;\n          const disabled = slotMinutes < boundaryMinutes;\n          console.log(`[DEBUG] start slot ${s}: slotMinutes=${slotMinutes}, disabled=${disabled}`);\n          return <option key={s} value={s} disabled={disabled}>{s}</option>;\n        })}\n      </select>\n\n      {/* 종료시간: boundary 이전 또는 <= start 비활성화 */}\n      <select value={end} onChange={e => setEnd(e.target.value)}>\n        {slots.map(s => {\n          const [h, m] = s.split(\":\").map(Number);\n          const slotMinutes = h * 60 + m;\n          const startMinutes = parseInt(start.split(\":\")[0], 10) * 60 + parseInt(start.split(\":\")[1], 10);\n          const disabled = slotMinutes < boundaryMinutes || slotMinutes <= startMinutes;\n          console.log(`[DEBUG] end slot ${s}: slotMinutes=${slotMinutes}, startMinutes=${startMinutes}, disabled=${disabled}`);\n          return <option key={s} value={s} disabled={disabled}>{s}</option>;\n        })}\n      </select>\n\n      {/* 사용자 입력 및 예약 */}\n      <input\n        type=\"text\"\n        placeholder=\"이름\"\n        value={user}\n        onChange={e => setUser(e.target.value)}\n        required\n      />\n      <button type=\"submit\">예약하기</button>\n    </form>\n  );\n}\n\n"],"mappings":"AAAA,mCACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,KAAK,CAAEC,KAAK,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,cAAe,SAAS,CAAAC,WAAWA,CAAAC,IAAA,CAA2C,IAA1C,CAAEC,YAAY,CAAEC,SAAS,CAAEC,WAAY,CAAC,CAAAH,IAAA,CAC1E,KAAM,CAACI,IAAI,CAAEC,OAAO,CAAC,CAAGd,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAC1C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGhB,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CAC5C,KAAM,CAACc,GAAG,CAAEC,MAAM,CAAC,CAAGlB,QAAQ,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CACxC,KAAM,CAACgB,IAAI,CAAEC,OAAO,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAEpC;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAoB,GAAG,CAAGlB,KAAK,CAACmB,OAAO,CAACP,KAAK,CAAC,CAChC,GAAIM,GAAG,CAAGlB,KAAK,CAACoB,MAAM,CAAG,CAAC,CAAEL,MAAM,CAACf,KAAK,CAACkB,GAAG,CAAG,CAAC,CAAC,CAAC,CACpD,CAAC,CAAE,CAACN,KAAK,CAAC,CAAC,CAEX;AACA,KAAM,CAAAS,UAAU,CAAGZ,WAAW,CAACa,QAAQ,CAAC,CAAC,CAAG,EAAE,CAAGb,WAAW,CAACc,UAAU,CAAC,CAAC,CACzEC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEJ,UAAU,CAAC,CAC9C,KAAM,CAAAK,WAAW,CAAG,CAAC,CAAG,EAAE,CAAI;AAC9B,KAAM,CAAAC,SAAS,CAAG,EAAE,CAAG,EAAE,CAAK;AAE9B;AACA,GAAI,CAAAC,eAAe,CACnB,GAAIP,UAAU,CAAGK,WAAW,CAAE,CAC5BE,eAAe,CAAGF,WAAW,CAC/B,CAAC,IAAM,IAAIL,UAAU,EAAIM,SAAS,CAAE,CAClCC,eAAe,CAAGC,QAAQ,CAC5B,CAAC,IAAM,CACLD,eAAe,CAAGE,IAAI,CAACC,IAAI,CAACV,UAAU,CAAG,EAAE,CAAC,CAAG,EAAE,CACnD,CACAG,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAEG,eAAe,CAAC,CAExD,KAAM,CAAAI,YAAY,CAAGC,CAAC,EAAI,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBV,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAE,CAAEf,IAAI,CAAEE,KAAK,CAAEE,GAAG,CAAEE,IAAK,CAAC,CAAC,CAC/D,KAAM,CAAAmB,IAAI,CAAGnC,KAAK,CAACmB,OAAO,CAACP,KAAK,CAAC,CACjC,KAAM,CAAAwB,IAAI,CAAGpC,KAAK,CAACmB,OAAO,CAACL,GAAG,CAAC,CAC/B,GAAIsB,IAAI,EAAID,IAAI,CAAE,CAChBE,KAAK,CAAC,qBAAqB,CAAC,CAC5B,OACF,CACA,KAAM,CAAAC,OAAO,CAAG/B,YAAY,CAACgC,IAAI,CAACC,CAAC,EACjCA,CAAC,CAAC9B,IAAI,GAAKA,IAAI,EACfV,KAAK,CAACmB,OAAO,CAACqB,CAAC,CAAC5B,KAAK,CAAC,CAAGwB,IAAI,EAC7BpC,KAAK,CAACmB,OAAO,CAACqB,CAAC,CAAC1B,GAAG,CAAC,CAAGqB,IACzB,CAAC,CACD,GAAIG,OAAO,CAAE,CACXD,KAAK,CAAC,cAAc,CAAC,CACrB,OACF,CACA7B,SAAS,CAAC,CAAEiC,EAAE,IAAAC,MAAA,CAAKhC,IAAI,MAAAgC,MAAA,CAAI9B,KAAK,MAAA8B,MAAA,CAAI5B,GAAG,CAAE,CAAEJ,IAAI,CAAEE,KAAK,CAAEE,GAAG,CAAEE,IAAK,CAAC,CAAC,CACpEQ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAE,CAAEf,IAAI,CAAEE,KAAK,CAAEE,GAAG,CAAEE,IAAK,CAAC,CAAC,CAC5DC,OAAO,CAAC,EAAE,CAAC,CACb,CAAC,CAED,mBACEb,KAAA,SAAMuC,QAAQ,CAAEX,YAAa,CAACY,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAM,CAAEC,GAAG,CAAE,KAAK,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAC,QAAA,eAExG/C,IAAA,WAAQgD,KAAK,CAAExC,IAAK,CAACyC,QAAQ,CAAElB,CAAC,EAAItB,OAAO,CAACsB,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAAAD,QAAA,CACzDlD,KAAK,CAACsD,GAAG,CAACb,CAAC,eAAItC,IAAA,WAAgBgD,KAAK,CAAEV,CAAE,CAAAS,QAAA,CAAET,CAAC,EAAfA,CAAwB,CAAC,CAAC,CACjD,CAAC,cAGTtC,IAAA,WAAQgD,KAAK,CAAEtC,KAAM,CAACuC,QAAQ,CAAElB,CAAC,EAAIpB,QAAQ,CAACoB,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAAAD,QAAA,CAC3DjD,KAAK,CAACqD,GAAG,CAACC,CAAC,EAAI,CACd,KAAM,CAACC,CAAC,CAAEC,CAAC,CAAC,CAAGF,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC,CAACJ,GAAG,CAACK,MAAM,CAAC,CACvC,KAAM,CAAAC,WAAW,CAAGJ,CAAC,CAAG,EAAE,CAAGC,CAAC,CAC9B,KAAM,CAAAI,QAAQ,CAAGD,WAAW,CAAG/B,eAAe,CAC9CJ,OAAO,CAACC,GAAG,uBAAAiB,MAAA,CAAuBY,CAAC,mBAAAZ,MAAA,CAAiBiB,WAAW,gBAAAjB,MAAA,CAAckB,QAAQ,CAAE,CAAC,CACxF,mBAAO1D,IAAA,WAAgBgD,KAAK,CAAEI,CAAE,CAACM,QAAQ,CAAEA,QAAS,CAAAX,QAAA,CAAEK,CAAC,EAAnCA,CAA4C,CAAC,CACnE,CAAC,CAAC,CACI,CAAC,cAGTpD,IAAA,WAAQgD,KAAK,CAAEpC,GAAI,CAACqC,QAAQ,CAAElB,CAAC,EAAIlB,MAAM,CAACkB,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CAAAD,QAAA,CACvDjD,KAAK,CAACqD,GAAG,CAACC,CAAC,EAAI,CACd,KAAM,CAACC,CAAC,CAAEC,CAAC,CAAC,CAAGF,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC,CAACJ,GAAG,CAACK,MAAM,CAAC,CACvC,KAAM,CAAAC,WAAW,CAAGJ,CAAC,CAAG,EAAE,CAAGC,CAAC,CAC9B,KAAM,CAAAK,YAAY,CAAGC,QAAQ,CAAClD,KAAK,CAAC6C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CAAG,EAAE,CAAGK,QAAQ,CAAClD,KAAK,CAAC6C,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE,EAAE,CAAC,CAC/F,KAAM,CAAAG,QAAQ,CAAGD,WAAW,CAAG/B,eAAe,EAAI+B,WAAW,EAAIE,YAAY,CAC7ErC,OAAO,CAACC,GAAG,qBAAAiB,MAAA,CAAqBY,CAAC,mBAAAZ,MAAA,CAAiBiB,WAAW,oBAAAjB,MAAA,CAAkBmB,YAAY,gBAAAnB,MAAA,CAAckB,QAAQ,CAAE,CAAC,CACpH,mBAAO1D,IAAA,WAAgBgD,KAAK,CAAEI,CAAE,CAACM,QAAQ,CAAEA,QAAS,CAAAX,QAAA,CAAEK,CAAC,EAAnCA,CAA4C,CAAC,CACnE,CAAC,CAAC,CACI,CAAC,cAGTpD,IAAA,UACE6D,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,cAAI,CAChBd,KAAK,CAAElC,IAAK,CACZmC,QAAQ,CAAElB,CAAC,EAAIhB,OAAO,CAACgB,CAAC,CAACmB,MAAM,CAACF,KAAK,CAAE,CACvCe,QAAQ,MACT,CAAC,cACF/D,IAAA,WAAQ6D,IAAI,CAAC,QAAQ,CAAAd,QAAA,CAAC,0BAAI,CAAQ,CAAC,EAC/B,CAAC,CAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}